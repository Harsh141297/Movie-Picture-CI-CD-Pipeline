name: Frontend CD

on:
  push:
    branches: [ main ]
    paths:
    - 'starter/frontend/**'
  workflow_dispatch:

jobs:
  lint-and-test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2

    - name: Set up Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '14'

    - name: Install dependencies
      run: cd starter/frontend && npm ci

    - name: Linting
      run: cd starter/frontend && npm install && npm run lint

    - name: Run tests
      run: cd starter/frontend && npm install && npm test

  build-and-deploy:
    runs-on: ubuntu-latest
    needs: lint-and-test
    steps:
    - uses: actions/checkout@v2

    - name: Set up Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '14'

    - name: Build frontend with Docker
      run: |
        cd starter/frontend
        npm install
        REACT_APP_MOVIE_API_URL=http://localhost:5000 npm run build
      env:
        REACT_APP_MOVIE_API_URL: ${{ secrets.REACT_APP_MOVIE_API_URL }}

    - name: Login to Amazon ECR
      uses: aws-actions/amazon-ecr-login@v1
      with:
        region: ${{ secrets.AWS_REGION }}
        access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

    - name: Build and push Docker image
      uses: docker/build-push-action@v2
      with:
        context: ./starter/frontend
        file: ./starter/frontend/Dockerfile
        push: true
        tags: 356698323071.dkr.ecr.us-east-1.amazonaws.com/movie-picture-frontend:${{ github.sha }}

    - name: Deploy to Kubernetes
      run: |
        aws eks update-kubeconfig --region ${{ secrets.AWS_REGION }} --name your-eks-cluster-name
        kustomize build | kubectl apply -f -
